import React, { useState } from "react";
import { BrowserRouter as Router, Switch, Route, Redirect } from "react-router-dom";
import PrivateRoute from "./PrivateRoute";
import Login from "./Login";
import Registration from "./Registration";
import ForgotPassword from "./ForgotPassword";
import LockScreen from "./LockScreen";
import LoginUser from "./LoginUser";
import Nav from "./Nav";
import Footer from "./Footer";

const App = () => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  return (
    <Router basename="/">
      <Switch>
        <Route path="/login">
          <div className="container-fluid">
            <Login setIsAuthenticated={setIsAuthenticated} />
          </div>
        </Route>
        <Route path="/register">
          <div className="container-fluid">
            <Registration />
          </div>
        </Route>
        <Route path="/forgotpassword">
          <div className="container-fluid">
            <ForgotPassword />
          </div>
        </Route>
        <Route path="/locked">
          <div className="container-fluid">
            <LockScreen />
          </div>
        </Route>
        <Route path="/userlogin">
          <div className="container-fluid">
            <LoginUser />
          </div>
        </Route>
        <PrivateRoute
          path="/"
          component={() => (
            <div id="" className="show">
              <Nav />
              <div className="content-body">
                <div className="container-fluid">
                  <Switch>
                    {routes.map((data, i) => (
                      <PrivateRoute
                        key={i}
                        exact
                        path={`/${data.url}`}
                        component={data.component}
                        isAuthenticated={isAuthenticated}
                      />
                    ))}
                  </Switch>
                </div>
              </div>
              <Footer />
            </div>
          )}
          isAuthenticated={isAuthenticated}
        />
        <Redirect to="/login" />
      </Switch>
    </Router>
  );
};

export default App;
